{"version":3,"sources":["app-factory.js","open-event-frontend/initializers/ajax.js","open-event-frontend/initializers/error-handler.js","open-event-frontend/instance-initializers/ember-data-storefront.js","open-event-frontend/instance-initializers/setup-fetch.js"],"names":["define","App","config","default","create","APP","_exports","Object","defineProperty","value","name","initialize","_default","Ember","onerror","err","errorMessage","concat","stack","console","error","applicationInstance","shoebox","lookup","get","storefront","put","created","queries","_fetch","instance","fastboot","setupFastboot"],"mappings":"AAAAA,OAAA,wBAAA,CAAA,0BAAA,0CAAA,SAAAC,EAAAC,GAIA,OAHAD,EAAAA,EAAA,QACAC,EAAAA,EAAA,QAEA,CACAC,QAAA,WACA,OAAAF,EAAAG,OAAAF,EAAAG,SCNAL,OAAA,wCAAA,CAAA,WAAA,SAAAM,GACA;AAEAC,OAAAC,eAAAF,EAAA,aAAA,CACAG,OAAA,IAEAH,EAAAH,aAAA;AASAG,EAAAH,QARA,CACAO,KAAA,eACAC,WAAA,gBCTAX,OAAA,iDAAA,CAAA,WAAA,SAAAM,GACA;AAEAC,OAAAC,eAAAF,EAAA,aAAA,CACAG,OAAA,IAEAH,EAAAH,aAAA;AAMA,IAAAS,EAAA,CACAF,KAAA,gBACAC,WAAA,WACAE,MAAAC,UAEAD,MAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,kFAAAC,OAAAF,EAAAG,OAAAH;AACAI,QAAAC,MAAAJ;AAKAV,EAAAH,QAAAS,ICxBAZ,OAAA,kEAAA,CAAA,WAAA,SAAAM,GACA;AAOA,SAAAK,EAAAU,GACA,IAAAC,EAAAD,EAAAE,OAAA,oBAAAC,IAAA,WACAC,EAAAJ,EAAAE,OAAA;AACAD,EAAAI,IAAA,wBAAA,CACAC,cACA,OAAAF,EAAAD,IAAA,2BAEAI,cACA,OAAAH,EAAAD,IAAA,2BAbAjB,OAAAC,eAAAF,EAAA,aAAA,CACAG,OAAA,IAEAH,EAAAH,aAAA,EACAG,EAAAK,WAAAA;AAaA,IAAAC,EAAA,CACAF,KAAA,wBACAC,WAAAA;AAEAL,EAAAH,QAAAS,ICxBAZ,OAAA,wDAAA,CAAA,UAAA,SAAA,SAAAM,EAAAuB,GACA;AAEAtB,OAAAC,eAAAF,EAAA,aAAA,CACAG,OAAA,IAEAH,EAAAH,aAAA;AAUA,IAAAS,EAAA,CACAF,KAAA,QACAC,WANA,SAAAmB,GACA,IAAAC,EAAAD,EAAAP,OAAA,qBACA,EAAAM,EAAAG,eAAAD,EAAAP,IAAA;AAMAlB,EAAAH,QAAAS","file":"open-event-frontend-fastboot.js","sourcesContent":["define('~fastboot/app-factory', ['open-event-frontend/app', 'open-event-frontend/config/environment'], function(App, config) {\n  App = App['default'];\n  config = config['default'];\n\n  return {\n    'default': function() {\n      return App.create(config.APP);\n    }\n  };\n});\n","define(\"open-event-frontend/initializers/ajax\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = {\n    name: 'ajax-service',\n    initialize: function initialize() {\n      // noop\n      // This is to override Fastboot's initializer which prevents ember-fetch from working\n      // https://github.com/ember-fastboot/ember-cli-fastboot/blob/master/fastboot/initializers/ajax.js\n    }\n  };\n  _exports.default = _default;\n});","define(\"open-event-frontend/initializers/error-handler\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  /**\n   * Initializer to attach an `onError` hook to your app running in fastboot. It catches any run loop\n   * exceptions and other errors and prevents the node process from crashing.\n   *\n   */\n  var _default = {\n    name: 'error-handler',\n    initialize: function initialize() {\n      if (!Ember.onerror) {\n        // if no onerror handler is defined, define one for fastboot environments\n        Ember.onerror = function (err) {\n          var errorMessage = \"There was an error running your app in fastboot. More info about the error: \\n \".concat(err.stack || err);\n          console.error(errorMessage);\n        };\n      }\n    }\n  };\n  _exports.default = _default;\n});","define(\"open-event-frontend/instance-initializers/ember-data-storefront\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  _exports.initialize = initialize;\n  function initialize(applicationInstance) {\n    var shoebox = applicationInstance.lookup('service:fastboot').get('shoebox');\n    var storefront = applicationInstance.lookup('service:storefront');\n    shoebox.put('ember-data-storefront', {\n      get created() {\n        return storefront.get('fastbootShoeboxCreated');\n      },\n      get queries() {\n        return storefront.get('fastbootDataRequests');\n      }\n    });\n  }\n  var _default = {\n    name: 'ember-data-storefront',\n    initialize: initialize\n  };\n  _exports.default = _default;\n});","define(\"open-event-frontend/instance-initializers/setup-fetch\", [\"exports\", \"fetch\"], function (_exports, _fetch) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  /**\n   * To allow relative URLs for Fastboot mode, we need the per request information\n   * from the fastboot service. Then we save the request from fastboot info.\n   * On each fetch with relative url we get host and protocol from it.\n   */\n  function patchFetchForRelativeURLs(instance) {\n    var fastboot = instance.lookup('service:fastboot');\n    (0, _fetch.setupFastboot)(fastboot.get('request'));\n  }\n  var _default = {\n    name: 'fetch',\n    initialize: patchFetchForRelativeURLs\n  };\n  _exports.default = _default;\n});"]}